//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XClip.Repositories {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Queries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Queries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XClip.Repositories.Queries", typeof(Queries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(*) FROM [BatchSources] WHERE [Filename] = @FName.
        /// </summary>
        internal static string FileExists {
            get {
                return ResourceManager.GetString("FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @CollectionId int
        ///
        ///declare @SourceId int
        ///
        ///select top 1 @SourceId = BI.[Id]
        ///FROM [BatchSources] BI
        ///WHERE (BI.Reviewed IS NULL) AND
        ///	(BI.Deleted IS NULL) AND
        ///	(BI.Skipped IS NULL) AND
        ///	(BI.FileExt = &apos;.mp4&apos;) AND
        ///	(BI.CollectionId = @CollectionId)
        ///ORDER BY NEWID()
        ///
        ///SELECT BS.Id, BS.UId, BS.[Filename], BS.[FileExt], BS.[Filesize], BS.[Created]
        ///from [BatchSources] BS
        ///where BS.Id = @SourceId.
        /// </summary>
        internal static string RandomSource {
            get {
                return ResourceManager.GetString("RandomSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [Collections] ([UserId], [Name]) VALUES (@UserId, @Name) SELECT SCOPE_IDENTITY().
        /// </summary>
        internal static string XCollectionInsert {
            get {
                return ResourceManager.GetString("XCollectionInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [Collections] SET [Deleted] = GetUtcDate() WHERE [Id] = @Id AND [UserId] = @UserId.
        /// </summary>
        internal static string XCollectionMarkDeleted {
            get {
                return ResourceManager.GetString("XCollectionMarkDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [UId] FROM [BatchSources] WHERE [Id] = @Id AND [CollectionId] = @CollectionId.
        /// </summary>
        internal static string XSourceGetUId {
            get {
                return ResourceManager.GetString("XSourceGetUId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [BatchSources] SET [Deleted] = GetUtcDate() WHERE [UId] = @UId.
        /// </summary>
        internal static string XSourceMarkDeleted {
            get {
                return ResourceManager.GetString("XSourceMarkDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [BatchSources] SET [Skipped] = GetUtcDate() WHERE [UId] = @UId.
        /// </summary>
        internal static string XSourceMarkSkipped {
            get {
                return ResourceManager.GetString("XSourceMarkSkipped", resourceCulture);
            }
        }
    }
}
